name: d-lama-service-cd

# Controls when the workflow will run
on:
  workflow_call:
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: feuerdave/d-lama-service
          
      - name: Build and push Docker image
        id: docker-build
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy_env:
    needs:
      - push_to_registry
    
    name: Deploy to environment
    runs-on: ubuntu-latest
    environment: sta
    steps:
      - uses: actions/checkout@master
        with:
          name: d-lama/ops-d-lama-service
      - env:
          DIGEST: ${{needs.push_to_registry.outputs.digest}}
        run: |
          ls -la
          echo "$DIGEST "
          echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "Tag name from github.ref_name: ${{  github.ref_name }}"
          echo "${{ needs.push_to_registry.outputs.digest }}"
          echo "${{ needs.push_to_registry.outputs.tags }}"
          echo "${{ needs.push_to_registry.docker-build.outputs.digest }}"
          echo "${{ needs.push_to_registry.meta.outputs.tags }}"
          kustomize --help
          kustomize d-lama-service/overlay/sta
